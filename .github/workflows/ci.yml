name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

# Ensure only one CI job per branch/PR runs at a time
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    # Needed only if later push to GHCR
    permissions:
      contents: read
      packages: write

    # Make tests use SQLite
    env:
      DATABASE_URL: sqlite:///./test.db
      PYTHONPATH: src

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest "fastapi[standard]"

      - name: Run tests
        run: pytest -q

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: movie-watchlist:ci

      # -------- OPTIONAL: push image to GHCR -----------
      # - name: Log in to GHCR
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Generate image metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ghcr.io/${{ github.repository_owner }}/movie-watchlist
      #
      # - name: Build and push image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}